{
    "summary": "The code uses DynamiCrafter and Gradio to create video examples with input fields, sliders, and output videos. It creates a DynamicRafter interface, sets the result directory, queues up to 12 items, and launches it with one thread.",
    "details": [
        {
            "comment": "The code imports necessary libraries, defines example image prompts for generating videos, sets CSS styles, and initializes the DynamiCrafter interface using Gradio. The DynamiCrafter is an open-domain image animation tool that utilizes video diffusion priors to generate animated videos from input images.",
            "location": "\"/media/root/Prima/works/DynamiCrafter/docs/src/gradio_app.py\":0-21",
            "content": "import os\nimport sys\nimport gradio as gr\nfrom scripts.gradio.i2v_test import Image2Video\nsys.path.insert(1, os.path.join(sys.path[0], 'lvdm'))\ni2v_examples = [\n    ['prompts/art.png', 'man fishing in a boat at sunset', 50, 7.5, 1.0, 3, 234],\n    ['prompts/boy.png', 'boy walking on the street', 50, 7.5, 1.0, 3, 125],\n    ['prompts/dance1.jpeg', 'two people dancing', 50, 7.5, 1.0, 3, 116],\n    ['prompts/fire_and_beach.jpg', 'a campfire on the beach and the ocean waves in the background', 50, 7.5, 1.0, 3, 111],\n    ['prompts/girl3.jpeg', 'girl talking and blinking', 50, 7.5, 1.0, 3, 111],\n    ['prompts/guitar0.jpeg', 'bear playing guitar happily, snowing', 50, 7.5, 1.0, 3, 122],\n]\ncss = \"\"\"#input_img {max-width: 256px !important} #output_vid {max-width: 256px; max-height: 256px}\"\"\"\ndef dynamicrafter_demo(result_dir='./tmp/'):\n    image2video = Image2Video(result_dir)\n    with gr.Blocks(analytics_enabled=False, css=css) as dynamicrafter_iface:\n        gr.Markdown(\"<div align='center'> <h1> DynamiCrafter: Animating Open-domain Images with Video Diffusion Priors </span> </h1> \\"
        },
        {
            "comment": "Code snippet displays author names with their corresponding GitHub links and a link to the project page for the DynamiCrafter project.",
            "location": "\"/media/root/Prima/works/DynamiCrafter/docs/src/gradio_app.py\":22-31",
            "content": "                      <h2 style='font-weight: 450; font-size: 1rem; margin: 0rem'>\\\n                        <a href='https://doubiiu.github.io/'>Jinbo Xing</a>, \\\n                        <a href='https://menghanxia.github.io/'>Menghan Xia</a>, <a href='https://yzhang2016.github.io/'>Yong Zhang</a>, \\\n                        <a href=''>Haoxin Chen</a>, <a href=''> Wangbo Yu</a>,\\\n                        <a href='https://github.com/hyliu'>Hanyuan Liu</a>, <a href='https://xinntao.github.io/'>Xintao Wang</a>,\\\n                        <a href='https://www.cse.cuhk.edu.hk/~ttwong/myself.html'>Tien-Tsin Wong</a>,\\\n                        <a href='https://scholar.google.com/citations?user=4oXBp9UAAAAJ&hl=zh-CN'>Ying Shan</a>\\\n                    </h2> \\\n                     <a style='font-size:18px;color: #000000' href='https://arxiv.org/abs/2310.12190'> [ArXiv] </a>\\\n                     <a style='font-size:18px;color: #000000' href='https://doubiiu.github.io/projects/DynamiCrafter/'> [Project Page] </a> \\"
        },
        {
            "comment": "This code snippet creates a tab in the Gradio application with the label \"Image2Video\". It includes input fields for an image, text prompts, and several sliders to control random seed, ETA, and CFG Scale. The UI is organized using rows and columns for better layout and user experience.",
            "location": "\"/media/root/Prima/works/DynamiCrafter/docs/src/gradio_app.py\":32-47",
            "content": "                     <a style='font-size:18px;color: #000000' href='https://github.com/Doubiiu/DynamiCrafter'> [Github] </a> </div>\")\n        #######image2video######\n        with gr.Tab(label='Image2Video'):\n            with gr.Column():\n                with gr.Row():\n                    with gr.Column():\n                        with gr.Row():\n                            i2v_input_image = gr.Image(label=\"Input Image\",elem_id=\"input_img\")\n                        with gr.Row():\n                            i2v_input_text = gr.Text(label='Prompts')\n                        with gr.Row():\n                            i2v_seed = gr.Slider(label='Random Seed', minimum=0, maximum=10000, step=1, value=123)\n                            i2v_eta = gr.Slider(minimum=0.0, maximum=1.0, step=0.1, label='ETA', value=1.0, elem_id=\"i2v_eta\")\n                            i2v_cfg_scale = gr.Slider(minimum=1.0, maximum=15.0, step=0.5, label='CFG Scale', value=7.5, elem_id=\"i2v_cfg_scale\")\n                        with gr.Row():"
        },
        {
            "comment": "The code above defines several interactive elements for a user interface. It includes sliders to control the number of sampling steps and motion magnitude, a generate button, and a video element to display the generated output. The code also includes a function call to generate an image-to-video example.",
            "location": "\"/media/root/Prima/works/DynamiCrafter/docs/src/gradio_app.py\":48-61",
            "content": "                            i2v_steps = gr.Slider(minimum=1, maximum=60, step=1, elem_id=\"i2v_steps\", label=\"Sampling steps\", value=50)\n                            i2v_motion = gr.Slider(minimum=1, maximum=4, step=1, elem_id=\"i2v_motion\", label=\"Motion magnitude\", value=3)\n                        i2v_end_btn = gr.Button(\"Generate\")\n                    # with gr.Tab(label='Result'):\n                    with gr.Row():\n                        i2v_output_video = gr.Video(label=\"Generated Video\",elem_id=\"output_vid\",autoplay=True,show_share_button=True)\n                gr.Examples(examples=i2v_examples,\n                            inputs=[i2v_input_image, i2v_input_text, i2v_steps, i2v_cfg_scale, i2v_eta, i2v_motion, i2v_seed],\n                            outputs=[i2v_output_video],\n                            fn = image2video.get_image,\n                            cache_examples=os.getenv('SYSTEM') == 'spaces',\n                )\n            i2v_end_btn.click(inputs=[i2v_input_image, i2v_input_text, i2v_steps, i2v_cfg_scale, i2v_eta, i2v_motion, i2v_seed],"
        },
        {
            "comment": "Creates an instance of DynamicRafter Interface, sets the result directory, queues up to 12 items for processing, and launches it with one thread.",
            "location": "\"/media/root/Prima/works/DynamiCrafter/docs/src/gradio_app.py\":62-73",
            "content": "                            outputs=[i2v_output_video],\n                            fn = image2video.get_image\n            )\n    return dynamicrafter_iface\nif __name__ == \"__main__\":\n    result_dir = os.path.join('./', 'results')\n    dynamicrafter_iface = dynamicrafter_demo(result_dir)\n    dynamicrafter_iface.queue(max_size=12)\n    dynamicrafter_iface.launch(max_threads=1)\n    # dynamicrafter_iface.launch(server_name='0.0.0.0', server_port=80, max_threads=1)"
        }
    ]
}